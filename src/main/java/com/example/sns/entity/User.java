package com.example.sns.entity;import jakarta.persistence.CascadeType;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.EnumType;import jakarta.persistence.Enumerated;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.OneToMany;import java.time.LocalDateTime;import java.util.ArrayList;import java.util.List;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;@Getter@Setter@Entity@NoArgsConstructor@AllArgsConstructor@Builderpublic class User {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @Column(unique = true, nullable = false, length = 10)    private String username;    @Column(nullable = false)    private String password;    @Enumerated(EnumType.STRING)    private Role role;    @OneToMany(mappedBy = "author", cascade = CascadeType.REMOVE, orphanRemoval = true)    private List<Post> posts = new ArrayList<>();    @OneToMany(mappedBy = "author", cascade = CascadeType.REMOVE, orphanRemoval = true)    private List<Comment> comments = new ArrayList<>();    @OneToMany(mappedBy = "user", cascade = CascadeType.REMOVE, orphanRemoval = true)    private List<PostLike> postLikes = new ArrayList<>();    @OneToMany(mappedBy = "user", cascade = CascadeType.REMOVE, orphanRemoval = true)    private List<CommentLike> commentLikes = new ArrayList<>();    @Column(nullable = false)    private boolean suspended = false;    @Column    private LocalDateTime suspendedUntil;    public enum Role {        USER, ADMIN    }}